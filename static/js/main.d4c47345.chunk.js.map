{"version":3,"sources":["components/Header.js","components/Footer.js","components/CardBack.js","App.js","index.js"],"names":["Header","Footer","href","CardBack","onDeal","onClick","src","alt","className","App","useState","dealtCards","setDealtCards","createTheme","Container","Box","length","Grid","container","direction","alignContent","item","Button","map","card","inverted","x","Math","floor","random","console","log","checkInverted","spacing","alignItems","xs","Card","sx","minWidth","CardActionArea","CardContent","Typography","align","component","name","meaning_rev","meaning_up","axios","get","then","response","data","cards","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+QAWeA,G,MATA,WAEX,OACE,gCACE,iDCKOC,EATA,WAEX,OACE,gCACE,4BAAI,uBAAGC,KAAK,kCAAR,gBCKGC,EATE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OAEf,OACE,yBAAKC,QAASD,GACZ,yBAAKE,IAAI,oGAAoGC,IAAI,uBAAuBC,UAAU,gBAAgBH,QAASD,M,wECuFpKK,EArFH,WACV,MAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACcC,cAwBZ,OACE,yBAAKL,UAAU,OACb,kBAAC,EAAD,MACA,8BACE,kBAACM,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKP,UAAU,aAEbG,EAAWK,OAAS,EACpB,kBAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,MAAMC,aAAa,cAC3C,kBAACH,EAAA,EAAD,CAAMI,MAAI,EAACF,UAAU,UACpB,kBAACG,EAAA,EAAD,CAAQjB,QAhCR,WAEbO,EAAc,MA8BD,SAKDD,EAAWY,KAAI,SAACC,GAEd,IAAMC,EAzBA,WACpB,IAAIC,EAAIC,KAAKC,MAAsB,EAAhBD,KAAKE,UAExB,GADAC,QAAQC,IAAIL,GACTA,EACD,OAAO,EAqBsBM,GACjB,OACE,kBAACf,EAAA,EAAD,CAAMC,WAAS,EAACG,MAAI,EAACF,UAAU,SAASc,QAAS,EAAGC,WAAW,WAC7D,kBAACjB,EAAA,EAAD,CAAMI,MAAI,EAACa,WAAW,OAAOC,GAAI,GAAI3B,UAAU,kBAC7C,kBAAC4B,EAAA,EAAD,CAAMC,GAAI,CAACC,SAAU,MACnB,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYC,MAAM,OAAOC,UAAU,MAAMnB,EAAKoB,MAE5CnB,EACE,kBAACgB,EAAA,EAAD,CAAYE,UAAU,KAAKD,MAAM,QAAjC,YAEA,GAEJ,kBAACD,EAAA,EAAD,KACIhB,EACED,EAAKqB,YAELrB,EAAKsB,qBAa3B,kBAAC,EAAD,CAAU1C,OAhEG,WACvB2C,IAAMC,IACJ,+DACAC,MAAK,SAACC,GACNtC,EAAcsC,EAASC,KAAKC,gBAkE1B,kBAAC,EAAD,QCpFRC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.d4c47345.chunk.js","sourcesContent":["import React from 'react';\n\nconst Header = () => {\n\n    return (\n      <header>\n        <h1>Fortune Teller</h1>\n      </header>\n    )\n}\n\nexport default Header;\n","import React from 'react';\n\nconst Footer = () =>  {\n\n    return (\n      <footer>\n        <h3><a href=\"https://github.com/joshuasoave\">My Github</a></h3>\n      </footer>\n    )\n}\n\nexport default Footer;\n","import React from 'react';\n\nconst CardBack = ({onDeal}) => {\n\n    return (\n      <div onClick={onDeal}> \n        <img src=\"https://cdn.shopify.com/s/files/1/1633/8969/products/300-063_RadiantRiderWaite_5.jpg?v=1500496205\" alt=\"back of a tarot card\" className=\"card-back-img\" onClick={onDeal}/>\n      </div>\n    )\n}\n\nexport default CardBack;\n","import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\nimport './index.css';\nimport Header from './components/Header.js';\nimport Footer from './components/Footer.js';\nimport CardBack from './components/CardBack.js';\nimport { Box, Button, Container, Grid, Typography, Card, CardContent, CardActionArea, createTheme } from '@material-ui/core';\n\nconst App = () => {\n  const [dealtCards, setDealtCards] = useState([])\n  const theme = createTheme()\n\n  const goBack = () => {\n    //set set to dealt cards false\n    setDealtCards([])\n  }\n\n  //Call 3rd party API for cards\n  const handleDealtCards = () => {\n    axios.get(\n      \"https://rws-cards-api.herokuapp.com/api/v1/cards/random?n=3\"\n    ).then((response) => {\n      setDealtCards(response.data.cards)\n    })\n  }\n\n  const checkInverted = () => {\n    let x = Math.floor(Math.random() * 2)\n    console.log(x)\n    if(x){\n      return true\n    }\n  }\n\n    return (\n      <div className=\"App\">\n        <Header/>\n        <main>\n          <Container>\n            <Box className=\"card-area\">\n            {\n              dealtCards.length > 0 ?\n              <Grid container direction=\"row\" alignContent=\"flex-start\">\n                <Grid item direction=\"column\">\n                 <Button onClick={goBack}>\n                    Back\n                  </Button>\n                </Grid>\n               { \n                dealtCards.map((card)=> {\n                  //randomly generates a number to determine inverted or not\n                  const inverted = checkInverted()\n                  return(\n                    <Grid container item direction=\"column\" spacing={2} alignItems=\"stretch\">\n                      <Grid item alignItems=\"left\" xs={12} className=\"card-grid-item\">\n                        <Card sx={{minWidth: 275}}>\n                          <CardActionArea>\n                            <CardContent>\n                              <Typography align=\"left\" component=\"h3\">{card.name}</Typography>\n                              {\n                                inverted ?\n                                  <Typography component=\"h3\" align=\"left\">Inverted</Typography>\n                                :\n                                  \"\"\n                              }\n                              <Typography>\n                                { inverted ? \n                                    card.meaning_rev\n                                    :\n                                    card.meaning_up\n                                }\n                              </Typography>\n                            </CardContent>\n                          </CardActionArea>\n                        </Card>\n                      </Grid>\n                    </Grid>\n                  )\n               })\n              }   \n              </Grid>\n            :\n              <CardBack onDeal={handleDealtCards}/>\n              \n            }\n            </Box>\n          </Container>\n        </main>\n        <Footer/>\n      </div>\n    )\n  }\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}